{% import 'header-footer.jinja' as hd %}
{% import 'properties.jinja' as prop %}

{{ hd.pragma_once(config.pragma_once) }}
{{ hd.namespace(config.namespace) }}

#include "macro_magic/component.h"

{% for structName, struct in structs.items() %}
    struct {{ structName }} {
        // Variables exposed to Lua
        {{ prop.fields(struct.expose) }}

        // Variables not exposed to Lua
        {{ prop.fields(struct.cpp_only) }}

        // Methods
        {{ prop.methods(struct.methods) }}

        // Struct info (for in-game inspector)
        inline static const SerializableStructInfo STRUCT_INFO = SerializableStructInfo(
            "{{ structName }}",
            { {{ prop.names(struct.expose, '"', '", ') }} },
            { {{ prop.types(struct.expose, '"', '", ') }} },
            { {{ prop.types(struct.expose, 'isFieldTypePrimitive<', '>(), ') }} },
            { {{ prop.types(struct.expose, 'isStructFieldFixedSize<', '>(), ') }} },
            SerializableStructInfo::getTypeHash<{{ structName }}>()
        );
    }
{% endfor %}

{{ hd.namespace_end(config.namespace) }}
{{ hd.pragma_once_end(config.pragma_once) }}
